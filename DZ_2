# Задание 1:
# Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. Стрелок выстрелил 100 раз. 
# Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.

# Решим по формуле Бернулли

import math

n = 100
k = 85
p = 0.8
q = 1 - p

P = math.comb(n, k) * pow(p, k) * pow(q, (n-k))

print(f'Вероятность того, что стрелок попадет в цель ровно 85 раз: {round(P*100, 1)}%') # 0,048 ≈ 4,8%

# Задание 2:

# Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004. В жилом комплексе после ремонта в один день включили 5000 новых лампочек.
# Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?

p = 0.0004
n = 5000
m0 = 0
m2 = 2
lamb = p * n

# Решим по формуле Пуассона

P0 = pow(lamb, m0) * math.exp(-lamb) / math.factorial(m0)
P2 = pow(lamb, m2) * math.exp(-lamb) / math.factorial(m2)

# Сравним по формуле Бернулли
# P0 = math.comb(n, m0) * pow(p, m0) * pow(1-p, (n-m0))
# P2 = math.comb(n, m2) * pow(p, m2) * pow(1-p, (n-m2))

print(f'Вероятность, что ни одна лампочка не перегорит в первый день: {round(P0*100, 1)}%') # 0,135 ≈ 13,5%
print(f'Вероятность, что перегорят ровно две лампочки: {round(P2*100, 1)}%') # 0,271 ≈ 27,1%


# Задание 3:

# Монету подбросили 144 раза.
# Какова вероятность, что орел выпадет ровно 70 раз?

# Решим по формуле Бернулли

n = 144
k = 70
p = 1/2
q = 1 - p

P = math.comb(n, k) * pow(p, k) * pow(q, (n-k))

print(f'Вероятность, что орел выпадет ровно 70 раз: {round(P*100, 1)}%') # 0,063 ≈ 6,3%


# Задание 4:

# В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых. 
# Из каждого ящика вытаскивают случайным образом по два мяча.

n1 = 10
k1 = 7
n2 = 11
k2 = 9


# а) Какова вероятность того, что все мячи белые?

p1 = math.comb(k1, 2) / math.comb(n1, 2) # Вероятность, что из 1 ящика вытянули 2 белых
p2 = math.comb(k2, 2) / math.comb(n2, 2) # Вероятность, что из 2 ящика вытянули 2 белых

P = p1 * p2

print(f'Вероятность того, что все мячи белые: {round(P*100, 1)}%') # 0,305 ≈ 30,5%



# б) Какова вероятность того, что ровно два мяча белые? 

p1 = math.comb(k1, 2) / math.comb(n1, 2) # Вероятность, что из 1 ящика вытянули 2 белых
p2 = math.comb(n1-k1, 2) / math.comb(n1, 2) # Вероятность, что из 1 ящика вытянули 2 не белых
p3 = math.comb(k2, 2) / math.comb(n2, 2) # Вероятность, что из 2 ящика вытянули 2 белых
p4 = math.comb(n2-k2, 2) / math.comb(n2, 2) # Вероятность, что из 2 ящика вытянули 2 не белых
p5 = math.comb(k1, 1) * math.comb(n1-k1, 1) / math.comb(n1, 2) # Вероятность, что из 1 ящика вытянули 1 белый и 1 не белый
p6 = math.comb(k2, 1) * math.comb(n2-k2, 1) / math.comb(n2, 2) # Вероятность, что из 2 ящика вытянули 1 белый и 1 не белый

P = p1*p4 + p2*p3 + p5*p6

print(f'Вероятность того, что ровно два мяча белые: {round(P*100, 1)}%') # 0,205 ≈ 20,5%



# в) Какова вероятность того, что хотя бы один мяч белый?

p1 = math.comb(n1-k1, 2) / math.comb(n1, 2) # Вероятность, что из 1 ящика вытянули 2 не белых
p2 = math.comb(n2-k2, 2) / math.comb(n2, 2) # Вероятность, что из 2 ящика вытянули 2 не белых

p = p1 * p2 # Вероятность, что из 1 ящика и из 2 ящика вытянули не белые мячи

P = 1 - p

print(f'Вероятность того, что хотя бы один мяч белый: {round(P*100, 1)}%') # 0,999 ≈ 99,9%
